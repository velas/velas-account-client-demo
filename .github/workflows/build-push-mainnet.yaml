name: Build-Deploy-mainnet
on:
  push:
    branches: [master,feature/ci_master]

jobs:
  docker-build:
    # Name the Job
    name: Build
    runs-on: build
    outputs:
      repository: ${{ steps.build.outputs.repository }}
      image_tag: ${{ steps.build.outputs.image_tag }}
    steps:
      - uses: actions/checkout@v2
      - name: Configure AWS credentials
        id: checkout
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ secrets.AWS_REGION }}
      - name: Login to Amazon ECR
        id: login-ecr
        uses: aws-actions/amazon-ecr-login@v1
      - name: Build, tag, and push image to AWS ECR
        id: build
        env:
          ECR_REGISTRY: ${{ steps.login-ecr.outputs.registry }}
          ECR_REPOSITORY: account-demo
          IMAGE_TAG: ${{ github.sha }}
          REACT_APP_CLIENT_ID: GbFVdaKFXRfpvBDTFHVChZ5umJpjYTvkXZ7oSZMNP8Lb
          REACT_APP_REDIRECT_URI: https://account-demo.velas.com
          REACT_APP_ACCOUNT_HOST: account.mainnet.velas.com
          REACT_APP_NETWORK_HOST: https://api.mainnet.velas.com
          REACT_APP_SPONSOR_HOST: https://api-sponsor.mainnet.velas.com
          REACT_APP_SPONSOR_PUB_KEY: EgJX7GpswpA8z3qRNuzNTgKKjPmw1UMfh5xQjFeVBqAK
          REACT_APP_HISTORY_HOST: https://api-history.velas.com
          REACT_APP_ACCOUNT_PROGRAM: VAcccHVjpknkW5N5R9sfRppQxYJrJYVV7QJGKchkQj5
        run: |
          docker build --no-cache --build-arg REACT_APP_CLIENT_ID \
            --build-arg REACT_APP_FAUCET \
            --build-arg REACT_APP_ACCOUNT_PROGRAM \
            --build-arg REACT_APP_CLIENT_ID \
            --build-arg REACT_APP_REDIRECT_URI \
            --build-arg REACT_APP_ACCOUNT_HOST \
            --build-arg REACT_APP_NETWORK_HOST \
            --build-arg REACT_APP_SPONSOR_HOST \
            --build-arg REACT_APP_SPONSOR_PUB_KEY \
            --build-arg REACT_APP_HISTORY_HOST \
            -t $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG .

          docker push $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG
          echo "::set-output name=repository::$ECR_REPOSITORY"
          echo "::set-output name=image_tag::$IMAGE_TAG"

  deploy:
    name: Deploy via Helmfile
    runs-on: deployer
    needs: docker-build
    container:
      image: cablespaghetti/helmfile-docker:3.5.4
    steps:
      - name: Configure AWS credentials
        id: checkout
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ secrets.AWS_REGION }}
      - name: Setup helmfile
        uses: mamezou-tech/setup-helmfile@v0.9.0
        with:
          helmfile-version: "v0.142.0"
      - name: Check out velas-infra
        uses: actions/checkout@master
        with:
          repository: velas/velas-infra
          ssh-key: ${{ secrets.INFRA_SSH_KEY }}
      - uses: azure/k8s-set-context@v2
        with:
          method: kubeconfig
          kubeconfig: ${{ secrets.KUBE_CONFIG_DATA_AWS_RAW }}
          context: "eks_prod-prod"
      - name: Sops Binary Installer
        uses: mdgreenwald/mozilla-sops-action@v1.1.0
      - name: Deploy via helmfile
        id: deploy
        env:
          ECR_REPOSITORY: ${{ needs.docker-build.outputs.repository }}
          IMAGE_TAG: ${{ needs.docker-build.outputs.image_tag }}
          ECR_REGION: ${{ secrets.AWS_REGION }}
        run: |
          cd deploy
          account_id=$(curl -s http://169.254.169.254/latest/dynamic/instance-identity/document | jq -r .accountId)
          ECR_REGISTRY=${account_id}.dkr.ecr.${ECR_REGION}.amazonaws.com
          helmfile -e prod -l namespace=mainnet,name=velas-account-demo apply  --set image.tag=$IMAGE_TAG,image.repository=$ECR_REGISTRY/$ECR_REPOSITORY --skip-deps
